Small steps to java schroedinger:
x#1    Write a test program for the the decoder	
x#2    Fix the Video Format difference that doesn't exist bug 
x#3    Fix the `negative array size' (Ie, Unpack error) bug
x#4    Implement picture header parsing
x#5    Fix reference picture managment (was Unpack bug)
x#6    Implement picture parsing
x#7    Figure out how to structure decoding (I'd like not to create
       a million `helper' classes).
#8     Implement subband decoding (first component only)
#9     Implement short[]-to-image conversion
#99    Fix the Unpack.skip() error

The plan for subband decoding:
Basically, every subband should decode into a separate array. Suppose
the transform depth is n, picture transform size is w*h, then each
array at subband b should have the size (w*h)/2^(n-b). There should be 
4*n+1 of such arrays; 3 per subband for each component, and 1 for
temporary storage.

That, or, subbands should decode into a large short[] array which can
be transformed into the final output picture. (This is what has
actually been implemented).
     
